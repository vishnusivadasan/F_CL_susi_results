#!/home/vsivadas/anaconda/bin/python

import susipop as sp
import os
import sys
import numpy as np
import pandas as pd
import subprocess
from susipop import filter
from susipop import reader
from susipop.susi.cache import SusiCache as cache

phi = str(sys.argv[1])
shearrate = str(sys.argv[2])

def _plot_pdf_timerange(phi,shearrate,bins = 41):
    cachefilename = "./cache/" + "phi_"+str(phi)+"_shearrate_"+str(shearrate).replace(".","_")+".h5"
    pdfcache = cache(cachefile=cachefilename)
    path = "rhor1_phi"+str(phi)+"_yd"+str(shearrate)
    dataset = sp.reader.DataSet(path,particles=True, fluid=True)
    tmin, tmax = 1, len(dataset.tlist)
    for t in range(tmin,tmax,1):
        if not pdfcache.has_data(t,"edges") and not pdfcache.has_data(t,"pair_df"):
            
            # global edges
            # global pair_df

            dataset.load_state(dataset.tlist[t])
            exp = dataset
            #Create the size of the area that you want to bin the distances in
            limit = 5 * exp.particles.radius.max()
            #cachename = "pdf_phi_"+str(phi)+"_shearrate_"+str(shearrate).replace(".","_")+"_time"+str(t)
            #Calculate the distances and bin them
            (edges, pair_df) = sp.spatial.correlations.pair_distribution_function(exp.particles.r,
                 L=exp.L, LEs=exp.LEs, histogramdd={"bins":(bins, bins, bins),"range":((-limit,limit),(-limit,limit),(-limit,limit))})
            datadict= dict()
            datadict["edges"] = edges
            datadict["pair_df"] = pair_df
            pdfcache.save_data(t,{"edges":edges, "pair_df":pair_df})
            print "saving data to cache: "+cachefilename+" for timestep :"+ str(t)
        else:
            print "data found in ", cachefilename

_plot_pdf_timerange(phi,shearrate)
