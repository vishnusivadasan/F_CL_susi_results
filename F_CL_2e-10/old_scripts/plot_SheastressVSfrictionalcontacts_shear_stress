#!/usr/bin/python
import itertools
import os
from susipop import filter
from susipop import reader
import numpy as np
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as plt
import sys 
import pandas as pd
import heatmap
from tqdm import tqdm
phivals = [float(i)/100.0 for i in sys.argv[1:]]


def get_folder_list():
    f = next(os.walk('.'))[1]
    return f

folders = get_folder_list()

db = dict()

for phi in phivals:
    db[phi] = [[],[]]
 
for folder in tqdm(folders):
  try:
    exp = reader.DataSet(folder, fluid=False, particles=True)
    phi = round(exp.phi,2)
    viscosity_file = pd.read_csv(folder+"/result/nu_t.dat")
    time = viscosity_file[viscosity_file.columns[0]]
    if (phi in phivals) & (len(exp.tlist) > 1):
        print folder
        exp.load_state(exp.tlist[1])
        viscosity = viscosity_file[viscosity_file.columns[2]]
        Shearstress_list = exp.shearrate*viscosity
        for t in tqdm(exp.tlist[100::10]):
            exp.load_state(t)
            t_ = np.where(time == t)[0]
            Shearstress = float(Shearstress_list[t_])
            #print Shearstress
            num_part_fric = len(np.where(np.asarray([np.linalg.norm(j) for j in exp.particles.sshear_fric])!= 0)[0]) 
            #number of particles in friction
            percent_part_fric = float(num_part_fric)/float(exp.npart)*100.0
            db[phi][0].append(Shearstress)
            db[phi][1].append(percent_part_fric)
  except Exception as e: print str(e);continue
  
print db

plt.figure(figsize=[10,10])
for phi in phivals:
    #plt.xscale('log')
    plt.xlabel('log10 Shear Stress (Pa)')
    plt.ylabel('percentage of frictional contacts')
    plt.plot(np.log10(db[phi][0]), db[phi][1],'.',label = "phi = "+str(phi))    
    plt.legend(loc = 'upper left')

name = 'shearstress_from_viscosity_vs_frcitionalcontacts'
plt.savefig(name)

np.save('friction_vs_shear_stress.npy',db)
