#!/usr/bin/python
import itertools
import os
from susipop import filter
from susipop import reader
import numpy as np
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as plt
import sys 
import pandas as pd
import heatmap

phivals = [float(i)/100.0 for i in sys.argv[1:]]

def get_folder_list():
    f = next(os.walk('.'))[1]
    return f

def sort_data(x,y):
    lists = sorted(itertools.izip(*[x, y]))
    new_x, new_y = list(itertools.izip(*lists))
    return new_x, new_y

folders = get_folder_list()

db = dict()

for phi in phivals:
    db[phi] = [[],[]]
 
for folder in folders:
  try:
    print folder
    exp = reader.DataSet(folder, fluid=False, particles=True)
    if len(exp.tlist) > 1:
        for i,t in enumerate(exp.tlist[1:]):
            exp.LoadState(t)
            viscosity_file = pd.read_csv(folder+"/result/nu_t.dat")
            viscosity = viscosity_file[viscosity_file.columns[2]][i]
            Shearstress = exp.shearrate*viscosity
            num_part_fric = len(np.where(np.asarray([np.linalg.norm(i) for i in exp.particles.Sshear_fric])!= 0)[0]) #number of particles in friction
            percent_part_fric = float(num_part_fric)/float(exp.npart)*100.0
            #print folder,'\t', percent_part_fric
            phi = exp.config['material']['particles']['0']['phi']
            db[phi][0].append(Shearstress)
            #print Shearstress
            db[phi][1].append(percent_part_fric)
  except Exception as e: print str(e);continue
  

plt.figure(figsize=[10,10])
for phi in phivals:
    plt.xscale('log')
    plt.xlabel('Shear Stress (Pa)')
    #plt.xlim([0,1000.0])
    plt.ylabel('percentage of frictional contacts')
    data = np.asarray(sort_data(db[phi][0], db[phi][1]))
    plt.plot(data[0], data[1],'o',label = "phi = "+str(phi))    
    plt.legend(loc = 'upper left')

name = 'shearstress_vs_frcitionalcontacts'
plt.savefig(name)

plt.figure(figsize=[10,10])
pts_scatter = [[],[]]
pts_tuple = []
for phi in phivals:
    for i in range(len(db[phi][0])):
        pts_scatter[0].append(db[phi][0][i])
        pts_scatter[1].append(db[phi][1][i])
        pts_tuple.append((np.log10(db[phi][0][i]),db[phi][1][i]))
plt.xscale('log')
plt.xlabel('Shear Stress (Pa)')
plt.ylabel('percentage of particles in frictional contacts')

plt.scatter(pts_scatter[0],pts_scatter[1])
plt.savefig("heatmap_scatter")

plt.figure()
plt.subplot(1,1,1)
hm = heatmap.Heatmap()
img = hm.heatmap(pts_tuple, dotsize=300, size=(1980, 1080), opacity=128, scheme='classic')
plt.xlabel('Shear Stress (Pa)')
plt.savefig("heatmap_tuple") 
