#!/usr/bin/python
import os
import numpy as np
import pandas as pd
import subprocess
import matplotlib as mpl
mpl.use('Agg')
import matplotlib.pyplot as plt
from matplotlib.legend_handler import HandlerLine2D

#solid part
ialist = ['tot','hd','lub','rep','fric']
files = dict()
for ia in ialist:
	cmd =  'find . -maxdepth 4 -type f -iname "part_stress_norm_' + ia+ '_t.dat"' 
	proc = subprocess.Popen(cmd  ,shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
	file = proc.communicate()[0].split()
	files[ia] = file

for ia in files.keys():
	strain_rate=  []
	phi = []
	N12 = []
	N23 = []
	print ia + "\n" + "-----------------------------------------"
	for file in files[ia]:
		df = pd.read_csv(file)
		s11_stress_mean = np.mean(df[df.columns[2]][-200:])
		s22_stress_mean = np.mean(df[df.columns[3]][-200:])
		s33_stress_mean = np.mean(df[df.columns[4]][-200:])

		str_rate = float(file.split('/')[1].split('_')[2].split('d')[1])
		phi_val = float(file.split('/')[1].split('_')[1].split('i')[1])/100.0
		if ia in ialist:
			factor = phi_val
		else:
			factor = 1-phi_val
		N12.append(s11_stress_mean - s33_stress_mean) #shoud phi_val be multiplied?
		N23.append(s33_stress_mean - s22_stress_mean)
		phi.append(phi_val)
		strain_rate.append(str_rate)
		#print phi_val , str_rate, stress_mean/str_rate/1.002e-3
	print "\n"
	strain_rate=  np.array(strain_rate)
	phi = np.array(phi)
	N12 = np.array(N12)
	N23 = np.array(N23)
#-------------------------------------------------------------------------------------
	plt.figure(figsize=(10, 15), dpi=200)

	plt.subplot(2,1,1)
	for p in np.unique(phi):
		print p
		idx =  np.where(phi == p)[0]
		if len(idx) > 0:
			_strain_rate = zip(*sorted(zip(strain_rate[idx], N12[idx])))[0]  
			_N12         = zip(*sorted(zip(strain_rate[idx], N12[idx])))[1]  
			plt.plot(_strain_rate, _N12, marker='o', label = 'phi= '+str(p))
			print strain_rate[idx], N12[idx]
	plt.xscale('log')
	plt.xlabel('shear rate (1/s)')
	plt.ylabel('1st Normal Stress Difference')
	plt.legend(loc='best')

	plt.subplot(2,1,2)
	for p in np.unique(phi):
		print p
		idx =  np.where(phi == p)[0]
		if len(idx) > 0:
			plt.plot(zip(*sorted(zip(strain_rate[idx], N23[idx])))[0], zip(*sorted(zip(strain_rate[idx], N23[idx])))[1], marker='o', label = 'phi= '+str(p))
			print strain_rate[idx], N23[idx]
	plt.xscale('log')
	plt.xlabel('shear rate (1/s)')
	plt.ylabel('2nd Normal Stress Difference')
	plt.legend(loc='best')
	"""
	plt.subplot(3,1,3)
	for p in np.unique(phi):
		print p
		idx =  np.where(phi == p)[0]
		if len(idx) > 0:
			plt.plot(strain_rate[idx], -1.0*np.divide(N12[idx],np.multiply(strain_rate[idx],1.002e-3)), marker='o', label = 'phi= '+str(p))
			print strain_rate[idx], -1.0*np.divide(N12[idx],np.multiply(strain_rate[idx],1.002e-3))
	plt.xscale('log')
	plt.yscale('log')
	plt.xlabel('shear rate (1/s)')
	plt.ylabel('normal stress difference coefficient')
	plt.legend(loc='best')
	"""
	plt.suptitle('Normal Stress difference vs shearrate_'+ia)
	plt.savefig('NormalStressDifference_vs_shearrate_'+ia)
	plt.close()

	
